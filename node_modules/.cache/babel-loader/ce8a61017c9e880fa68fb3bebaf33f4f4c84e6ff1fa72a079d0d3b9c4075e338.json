{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Desktop\\\\Programs\\\\ReactJS\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherApi = {\n  key: \"01877eb0f113d4d0c163508453b2d61e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\nconst timeApiBase = \"https://timeapi.io/api/Time/current/coordinate?\";\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [localTime, setLocalTime] = useState('');\n  const [isFetchingTime, setIsFetchingTime] = useState(false);\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${weatherApi.base}weather?q=${query}&units=metric&APPID=${weatherApi.key}`).then(res => res.json()).then(result => {\n        if (result.cod !== \"404\") {\n          setWeather(result);\n          setQuery('');\n          setIsFetchingTime(true);\n          fetchLocalTime(result.coord.lat, result.coord.lon);\n        } else {\n          console.error(\"City not found\");\n        }\n      }).catch(err => {\n        console.error(\"Error fetching weather data: \", err);\n      });\n    }\n  };\n  const fetchLocalTime = (lat, lon) => {\n    fetch(`${timeApiBase}latitude=${lat}&longitude=${lon}`).then(res => res.json()).then(result => {\n      setLocalTime(result.dateTime);\n      setIsFetchingTime(false);\n    }).catch(err => {\n      console.error(\"Error fetching local time: \", err);\n      setIsFetchingTime(false);\n    });\n  };\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: typeof weather.main !== \"undefined\" ? weather.main.temp > 16 ? 'app warm' : 'app cold' : 'app',\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"../assets/_CloudGaze_Logo.png\",\n          alt: \"CloudGaze Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search...\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), typeof weather.main !== \"undefined\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location\",\n          children: [weather.name, \", \", weather.sys.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: dateBuilder(new Date())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), typeof weather.main !== \"undefined\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-time-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"local-time\",\n          children: [\"Local Time: \", isFetchingTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sun sunshine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this) : localTime ? new Date(localTime).toLocaleTimeString() : 'Error fetching time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hVOsngmqu9MJrEHQmiWRlD2p4u4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","weatherApi","key","base","timeApiBase","App","_s","query","setQuery","weather","setWeather","localTime","setLocalTime","isFetchingTime","setIsFetchingTime","search","evt","fetch","then","res","json","result","cod","fetchLocalTime","coord","lat","lon","console","error","catch","err","dateTime","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","className","main","temp","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onKeyPress","name","sys","country","Date","Math","round","toLocaleTimeString","_c","$RefreshReg$"],"sources":["C:/Users/surya/Desktop/Programs/ReactJS/weather-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst weatherApi = {\n  key: \"01877eb0f113d4d0c163508453b2d61e\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst timeApiBase = \"https://timeapi.io/api/Time/current/coordinate?\";\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [localTime, setLocalTime] = useState('');\n  const [isFetchingTime, setIsFetchingTime] = useState(false);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${weatherApi.base}weather?q=${query}&units=metric&APPID=${weatherApi.key}`)\n        .then(res => res.json())\n        .then(result => {\n          if (result.cod !== \"404\") {\n            setWeather(result);\n            setQuery('');\n            setIsFetchingTime(true);\n            fetchLocalTime(result.coord.lat, result.coord.lon);\n          } else {\n            console.error(\"City not found\");\n          }\n        })\n        .catch(err => {\n          console.error(\"Error fetching weather data: \", err);\n        });\n    }\n  };\n\n  const fetchLocalTime = (lat, lon) => {\n    fetch(`${timeApiBase}latitude=${lat}&longitude=${lon}`)\n      .then(res => res.json())\n      .then(result => {\n        setLocalTime(result.dateTime);\n        setIsFetchingTime(false);\n      })\n      .catch(err => {\n        console.error(\"Error fetching local time: \", err);\n        setIsFetchingTime(false);\n      });\n  };\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    <div className={(typeof weather.main !== \"undefined\") ? ((weather.main.temp > 16) ? 'app warm' : 'app cold') : 'app'}>\n      <main>\n        <div className=\"logo\">\n          <img src=\"../assets/_CloudGaze_Logo.png\" alt=\"CloudGaze Logo\"/> \n        </div>\n\n        <div className=\"search-box\">\n          <input\n            type=\"text\"\n            className=\"search-bar\"\n            placeholder=\"Search...\"\n            onChange={e => setQuery(e.target.value)}\n            value={query}\n            onKeyPress={search}\n          />\n        </div>\n\n        {(typeof weather.main !== \"undefined\") && (\n          <div className=\"weather\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n            <div className=\"weather-box\">\n              <div className=\"temp\">\n                {Math.round(weather.main.temp)}°C\n              </div>\n              <div className=\"weather\">{weather.weather[0].main}</div>\n            </div>\n          </div>\n        )}\n\n        {(typeof weather.main !== \"undefined\") && (\n          <div className=\"local-time-box\">\n            <div className=\"local-time\">\n              Local Time: {isFetchingTime ? (\n                <div className=\"container\">\n                  <span className=\"sun sunshine\"></span>\n                  <span className=\"sun\"></span>\n                </div>\n              ) : (\n                localTime ? new Date(localTime).toLocaleTimeString() : 'Error fetching time'\n              )}\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}